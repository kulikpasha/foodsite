[{"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\index.js":"1","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\App.js":"2","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\store\\UserStore.js":"3","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\http\\userAPI.js":"4","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\NavBar.js":"5","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\AppRouter.js":"6","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\http\\index.js":"7","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\routes.js":"8","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\utils\\consts.js":"9","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Basket.js":"10","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Auth.js":"11","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Admin.js":"12","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Shop.js":"13","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\Pages.js":"14","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\BrandBar.js":"15","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\TypeBar.js":"16","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\modals\\CreateType.js":"17","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\modals\\CreateBrand.js":"18","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\http\\recipeAPI.js":"19","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\modals\\CreateRecipe.js":"20","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\RecipeList.js":"21","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\RecipeItem.js":"22","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\store\\RecipeStore.js":"23","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\RecipePage.js":"24"},{"size":420,"mtime":1716804271857,"results":"25","hashOfConfig":"26"},{"size":809,"mtime":1716804270254,"results":"27","hashOfConfig":"26"},{"size":401,"mtime":1611985807000,"results":"28","hashOfConfig":"26"},{"size":699,"mtime":1716804250954,"results":"29","hashOfConfig":"26"},{"size":1491,"mtime":1716804241482,"results":"30","hashOfConfig":"26"},{"size":491,"mtime":1716804234651,"results":"31","hashOfConfig":"26"},{"size":398,"mtime":1716804247954,"results":"32","hashOfConfig":"26"},{"size":683,"mtime":1716811233257,"results":"33","hashOfConfig":"26"},{"size":234,"mtime":1716812485466,"results":"34","hashOfConfig":"26"},{"size":105,"mtime":1716804255792,"results":"35","hashOfConfig":"26"},{"size":2423,"mtime":1716804253816,"results":"36","hashOfConfig":"26"},{"size":1305,"mtime":1716804252561,"results":"37","hashOfConfig":"26"},{"size":1379,"mtime":1716824585356,"results":"38","hashOfConfig":"26"},{"size":667,"mtime":1716823915902,"results":"39","hashOfConfig":"26"},{"size":729,"mtime":1716825490598,"results":"40","hashOfConfig":"26"},{"size":704,"mtime":1716825583685,"results":"41","hashOfConfig":"26"},{"size":1355,"mtime":1716801615104,"results":"42","hashOfConfig":"26"},{"size":1372,"mtime":1716801615103,"results":"43","hashOfConfig":"26"},{"size":990,"mtime":1716824220405,"results":"44","hashOfConfig":"26"},{"size":6207,"mtime":1716829347268,"results":"45","hashOfConfig":"26"},{"size":1194,"mtime":1716812216098,"results":"46","hashOfConfig":"26"},{"size":1158,"mtime":1716811189251,"results":"47","hashOfConfig":"26"},{"size":1074,"mtime":1716826745202,"results":"48","hashOfConfig":"26"},{"size":2159,"mtime":1716822931082,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"4k2vs6",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\index.js",[],["106","107"],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\App.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\store\\UserStore.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\http\\userAPI.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\NavBar.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\http\\index.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\routes.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\utils\\consts.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Basket.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Auth.js",["108"],"import React, { useContext, useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n\tconst { user } = useContext(Context);\n\tconst location = useLocation();\n\tconst navigate = useNavigate();\n\tconst isLogin = location.pathname === LOGIN_ROUTE;\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\tconst click = async () => {\n\t\ttry {\n\t\t\tlet data;\n\t\t\tif (isLogin) {\n\t\t\t\tdata = await login(email, password);\n\t\t\t} else {\n\t\t\t\tdata = await registration(email, password);\n\t\t\t}\n\t\t\tuser.setUser(user);\n\t\t\tuser.setIsAuth(true);\n\t\t\tnavigate(SHOP_ROUTE);\n\t\t} catch (e) {\n\t\t\talert(e.response.data.message);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container\n\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\n\t\t\tstyle={{ height: window.innerHeight - 54 }}\n\t\t>\n\t\t\t<Card style={{ width: 600 }} className=\"p-5\">\n\t\t\t\t<h2 className=\"m-auto\">\n\t\t\t\t\t{isLogin ? \"Авторизация\" : \"Регистрация\"}\n\t\t\t\t</h2>\n\t\t\t\t<Form className=\"d-flex flex-column\">\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName=\"mt-3\"\n\t\t\t\t\t\tplaceholder=\"Введите ваш email...\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName=\"mt-3\"\n\t\t\t\t\t\tplaceholder=\"Введите ваш пароль...\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n\t\t\t\t\t\t{isLogin ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tНет аккаунта?{\" \"}\n\t\t\t\t\t\t\t\t<NavLink to={REGISTRATION_ROUTE}>\n\t\t\t\t\t\t\t\t\tЗарегистрируйся!\n\t\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tЕсть аккаунт?{\" \"}\n\t\t\t\t\t\t\t\t<NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button variant={\"outline-success\"} onClick={click}>\n\t\t\t\t\t\t\t{isLogin ? \"Войти\" : \"Регистрация\"}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t</Container>\n\t);\n});\n\nexport default Auth;\n","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Admin.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\Shop.js",["109","110"],"import React, { useContext, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport RecipeList from \"../components/RecipeList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchRecipes, fetchTypes } from \"../http/recipeAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n\tconst { recipe } = useContext(Context);\n\n\tuseEffect(() => {\n\t\tfetchTypes().then((data) => recipe.setTypes(data));\n\t\tfetchBrands().then((data) => recipe.setBrands(data));\n\t\tfetchRecipes(null, null, 1, recipe.limit).then((data) => {\n\t\t\trecipe.setRecipes(data.rows);\n\t\t\trecipe.setTotalCount(data.count);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchRecipes(\n\t\t\trecipe.selectedType.id,\n\t\t\trecipe.selectedBrand.id,\n\t\t\trecipe.page,\n\t\t\trecipe.limit\n\t\t).then((data) => {\n\t\t\trecipe.setRecipes(data.rows);\n\t\t\trecipe.setTotalCount(data.count);\n\t\t});\n\t}, [recipe.page, recipe.selectedType, recipe.selectedBrand]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row className=\"mt-2\">\n\t\t\t\t<Col md={3}>\n\t\t\t\t\t<TypeBar />\n\t\t\t\t</Col>\n\t\t\t\t<Col md={9}>\n\t\t\t\t\t<BrandBar />\n\t\t\t\t\t<RecipeList />\n\t\t\t\t\t<Pages />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n});\n\nexport default Shop;\n","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\Pages.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\BrandBar.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\TypeBar.js",["111"],"import React, { useContext } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n\tconst { recipe } = useContext(Context);\n\treturn (\n\t\t<ListGroup>\n\t\t\t{recipe.types.map((type) => (\n\t\t\t\t<ListGroup.Item\n\t\t\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\t\t\tactive={type.id === recipe.selectedType.id}\n\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\trecipe.selectedType === type\n\t\t\t\t\t\t\t? recipe.setSelectedType({})\n\t\t\t\t\t\t\t: recipe.setSelectedType(type)\n\t\t\t\t\t}\n\t\t\t\t\tkey={type.id}\n\t\t\t\t>\n\t\t\t\t\t{type.name}\n\t\t\t\t</ListGroup.Item>\n\t\t\t))}\n\t\t</ListGroup>\n\t);\n});\n\nexport default TypeBar;\n","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\modals\\CreateType.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\modals\\CreateBrand.js",["112"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/recipeAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тип\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название типа\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\http\\recipeAPI.js",["113"],"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n\tconst { data } = await $authHost.post(\"api/type\", type);\n\treturn data;\n};\n\nexport const fetchTypes = async () => {\n\tconst { data } = await $host.get(\"api/type\");\n\treturn data;\n};\n\nexport const createBrand = async (brand) => {\n\tconst { data } = await $authHost.post(\"api/brand\", brand);\n\treturn data;\n};\n\nexport const fetchBrands = async () => {\n\tconst { data } = await $host.get(\"api/brand\");\n\treturn data;\n};\n\nexport const createRecipe = async (recipe) => {\n\tconst { data } = await $authHost.post(\"api/recipe\", recipe);\n\treturn data;\n};\n\nexport const fetchRecipes = async (typeId, brandId, page, limit = 5) => {\n\tconst { data } = await $host.get(\"api/recipe\", {\n\t\tparams: {\n\t\t\ttypeId,\n\t\t\tbrandId,\n\t\t\tpage,\n\t\t\tlimit,\n\t\t},\n\t});\n\treturn data;\n};\n\nexport const fetchOneRecipe = async (id) => {\n\tconst { data } = await $host.get(\"api/recipe/\" + id);\n\treturn data;\n};\n","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\modals\\CreateRecipe.js",["114","115"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport {\n\tcreateRecipe,\n\tfetchBrands,\n\tfetchRecipes,\n\tfetchTypes,\n} from \"../../http/recipeAPI\";\nimport { observer } from \"mobx-react-lite\";\n\nconst CreateRecipe = observer(({ show, onHide }) => {\n\tconst { recipe } = useContext(Context);\n\tconst [name, setName] = useState(\"\");\n\tconst [ingridients, setIngridients] = useState([]);\n\tconst [file, setFile] = useState(null);\n\tconst [instructions, setInstructions] = useState([]);\n\n\tuseEffect(() => {\n\t\tfetchTypes().then((data) => recipe.setTypes(data));\n\t\tfetchBrands().then((data) => recipe.setBrands(data));\n\t}, []);\n\n\tconst addinstructions = () => {\n\t\tsetInstructions([\n\t\t\t...instructions,\n\t\t\t{ title: \"\", description: \"\", number: Date.now() },\n\t\t]);\n\t};\n\tconst removeinstructions = (number) => {\n\t\tsetInstructions(instructions.filter((i) => i.number !== number));\n\t};\n\tconst changeinstructions = (key, value, number) => {\n\t\tsetInstructions(\n\t\t\tinstructions.map((i) =>\n\t\t\t\ti.number === number ? { ...i, [key]: value } : i\n\t\t\t)\n\t\t);\n\t};\n\n\tconst addingridients = () => {\n\t\tsetIngridients([\n\t\t\t...ingridients,\n\t\t\t{ name: \"\", amount: \"\", amount_type: \"\", number: Date.now() },\n\t\t]);\n\t};\n\tconst removeingridients = (number) => {\n\t\tsetIngridients(ingridients.filter((i) => i.number !== number));\n\t};\n\tconst changeingridients = (key, value, number) => {\n\t\tsetIngridients(\n\t\t\tingridients.map((i) =>\n\t\t\t\ti.number === number ? { ...i, [key]: value } : i\n\t\t\t)\n\t\t);\n\t};\n\n\tconst selectFile = (e) => {\n\t\tsetFile(e.target.files[0]);\n\t};\n\n\tconst addRecipe = () => {\n\t\tconst formData = new FormData();\n\t\tformData.append(\"name\", name);\n\t\tformData.append(\"img\", file);\n\t\tformData.append(\"ingridients\", JSON.stringify(ingridients));\n\t\tformData.append(\"brandId\", recipe.selectedBrand.id);\n\t\tformData.append(\"typeId\", recipe.selectedType.id);\n\t\tformData.append(\"instructions\", JSON.stringify(instructions));\n\t\tcreateRecipe(formData).then((data) => onHide());\n\t};\n\n\treturn (\n\t\t<Modal show={show} onHide={onHide} centered>\n\t\t\t<Modal.Header closeButton>\n\t\t\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\n\t\t\t\t\tДобавить рецепт\n\t\t\t\t</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Body>\n\t\t\t\t<Form>\n\t\t\t\t\t<Dropdown className=\"mt-2 mb-2\">\n\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\t{recipe.selectedType.name || \"Выберите тип\"}\n\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t{recipe.types.map((type) => (\n\t\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\t\tonClick={() => recipe.setSelectedType(type)}\n\t\t\t\t\t\t\t\t\tkey={type.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{type.name}\n\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<Dropdown className=\"mt-2 mb-2\">\n\t\t\t\t\t\t<Dropdown.Toggle>\n\t\t\t\t\t\t\t{recipe.selectedBrand.name || \"Выберите кухню\"}\n\t\t\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t{recipe.brands.map((brand) => (\n\t\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\trecipe.setSelectedBrand(brand)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tkey={brand.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{brand.name}\n\t\t\t\t\t\t\t\t</Dropdown.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\tclassName=\"mt-3\"\n\t\t\t\t\t\tplaceholder=\"Введите название рецепта\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tclassName=\"mt-3\"\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tonChange={selectFile}\n\t\t\t\t\t/>\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t<Button variant={\"outline-dark\"} onClick={addingridients}>\n\t\t\t\t\t\tДобавить новый ингридиент\n\t\t\t\t\t</Button>\n\t\t\t\t\t{ingridients.map((i) => (\n\t\t\t\t\t\t<Row className=\"mt-4\" key={i.number}>\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={i.title}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tchangeingridients(\n\t\t\t\t\t\t\t\t\t\t\t\"name\",\n\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\ti.number\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите название ингридиента\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={i.amount}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tchangeingridients(\n\t\t\t\t\t\t\t\t\t\t\t\"amount\",\n\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\ti.number\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите количество\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={i.amount_type}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tchangeingridients(\n\t\t\t\t\t\t\t\t\t\t\t\"amount_type\",\n\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\ti.number\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите единицу измерения\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => removeingridients(i.number)}\n\t\t\t\t\t\t\t\t\tvariant={\"outline-danger\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tУдалить\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t))}\n\t\t\t\t\t<hr />\n\t\t\t\t\t<Button variant={\"outline-dark\"} onClick={addinstructions}>\n\t\t\t\t\t\tДобавить новый шаг\n\t\t\t\t\t</Button>\n\t\t\t\t\t{instructions.map((i) => (\n\t\t\t\t\t\t<Row className=\"mt-4\" key={i.number}>\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={i.title}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tchangeinstructions(\n\t\t\t\t\t\t\t\t\t\t\t\"title\",\n\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\ti.number\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите название шага\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tvalue={i.description}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tchangeinstructions(\n\t\t\t\t\t\t\t\t\t\t\t\"description\",\n\t\t\t\t\t\t\t\t\t\t\te.target.value,\n\t\t\t\t\t\t\t\t\t\t\ti.number\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Введите описание инструкции\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={4}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => removeinstructions(i.number)}\n\t\t\t\t\t\t\t\t\tvariant={\"outline-danger\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tУдалить\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t))}\n\t\t\t\t</Form>\n\t\t\t</Modal.Body>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Button variant=\"outline-danger\" onClick={onHide}>\n\t\t\t\t\tЗакрыть\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"outline-success\" onClick={addRecipe}>\n\t\t\t\t\tДобавить\n\t\t\t\t</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n});\n\nexport default CreateRecipe;\n","C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\RecipeList.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\components\\RecipeItem.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\store\\RecipeStore.js",[],"C:\\Users\\kulik\\Documents\\GitHub\\foodsite\\client\\src\\pages\\RecipePage.js",["116"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport bigStar from \"../assets/bigStar.png\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchOneRecipe } from \"../http/recipeAPI\";\n\nconst RecipePage = () => {\n\tconst [recipe, setRecipe] = useState({ instructions: [], ingridients: [] });\n\tconst { id } = useParams();\n\tuseEffect(() => {\n\t\tfetchOneRecipe(id).then((data) => setRecipe(data));\n\t}, []);\n\n\treturn (\n\t\t<Container className=\"mt-3\">\n\t\t\t<Row>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Image\n\t\t\t\t\t\twidth={300}\n\t\t\t\t\t\theight={300}\n\t\t\t\t\t\tsrc={process.env.REACT_APP_API_URL + recipe.img}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Row className=\"d-flex flex-column align-items-center\">\n\t\t\t\t\t\t<h2>{recipe.name}</h2>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"d-flex align-items-center justify-content-center\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: `url(${bigStar}) no-repeat center center`,\n\t\t\t\t\t\t\t\twidth: 240,\n\t\t\t\t\t\t\t\theight: 240,\n\t\t\t\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\t\t\t\tfontSize: 64,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{recipe.rating}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col md={4}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Button variant={\"outline-dark\"}>\n\t\t\t\t\t\t\tДобавить в \"Избранное\"\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"d-flex flex-column m-3\">\n\t\t\t\t<h1>Ингридиенты</h1>\n\t\t\t\t{recipe.ingridients.map((ingridients, index) => (\n\t\t\t\t\t<Row\n\t\t\t\t\t\tkey={ingridients.id}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\tindex % 2 === 0 ? \"lightgray\" : \"transparent\",\n\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{ingridients.name}: {ingridients.amount}{\" \"}\n\t\t\t\t\t\t{ingridients.amount_type}\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</Row>\n\n\t\t\t<Row className=\"d-flex flex-column m-3\">\n\t\t\t\t<h1>Инструкции по приготовлению</h1>\n\t\t\t\t{recipe.instructions.map((instructions, index) => (\n\t\t\t\t\t<Row\n\t\t\t\t\t\tkey={instructions.id}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\t\tindex % 2 === 0 ? \"lightgray\" : \"transparent\",\n\t\t\t\t\t\t\tpadding: 10,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{instructions.title}: {instructions.description}\n\t\t\t\t\t</Row>\n\t\t\t\t))}\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default RecipePage;\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":26,"column":5,"nodeType":"123","messageId":"124","endLine":26,"endColumn":9},{"ruleId":"125","severity":1,"message":"126","line":23,"column":5,"nodeType":"127","endLine":23,"endColumn":7,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"126","line":35,"column":5,"nodeType":"127","endLine":35,"endColumn":61,"suggestions":"129"},{"ruleId":"121","severity":1,"message":"130","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":11},{"ruleId":"121","severity":1,"message":"131","line":4,"column":22,"nodeType":"123","messageId":"124","endLine":4,"endColumn":32},{"ruleId":"121","severity":1,"message":"132","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"133","line":8,"column":2,"nodeType":"123","messageId":"124","endLine":8,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":23,"column":5,"nodeType":"127","endLine":23,"endColumn":7,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"135","line":12,"column":5,"nodeType":"127","endLine":12,"endColumn":7,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipe'. Either include it or remove the dependency array.","ArrayExpression",["139"],["140"],"'Col' is defined but never used.","'createType' is defined but never used.","'jwt_decode' is defined but never used.","'fetchRecipes' is defined but never used.",["141"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"143","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [recipe]",{"range":"150","text":"151"},"Update the dependencies array to be: [recipe.page, recipe.selectedType, recipe.selectedBrand, recipe]",{"range":"152","text":"153"},{"range":"154","text":"151"},"Update the dependencies array to be: [id]",{"range":"155","text":"156"},[859,861],"[recipe]",[1088,1144],"[recipe.page, recipe.selectedType, recipe.selectedBrand, recipe]",[773,775],[483,485],"[id]"]